version: 2.1

jobs:
    client:
        docker:
            -   image: circleci/node:14.15.4
        steps:
            - checkout
            -   restore_cache: &restore-npm-cache
                    keys:
                        - npm-deps-{{ checksum "client/package-lock.json" }}
                        - npm-deps-
            -   run: make -C client install
            -   run: make -C client test
            -   save_cache: &save-npm-cache
                    key: npm-deps-{{ checksum "client/package-lock.json" }}
                    paths:
                        - client/node_modules/
    server:
        docker:
            -   image: circleci/php:7.4-node-browsers
                environment: &server-env
                    VIMEET_365_DATABASE_URL: "postgresql://docker:docker@localhost:5432/proximum_vimeet365_test?serverVersion=13&charset=utf8"
            -   image: circleci/postgres:12.1-alpine
                environment: &postgresql-env
                    POSTGRES_USER: docker
                    POSTGRES_PASSWORD: docker
                    POSTGRES_DB: proximum_vimeet365_test
        steps:
            - checkout

            -   run: &server-dependencies
                    name: Install server dependencies
                    command: |
                        sudo apt update
                        sudo apt install libpq-dev
                        sudo docker-php-ext-install zip pdo pgsql pdo_pgsql

            # Download and cache dependencies
            -   restore_cache: &restore-composer-cache
                    keys:
                        - server-composer-deps-{{ checksum "server/composer.lock" }}
                        - server-composer-deps-
            -   restore_cache: &restore-server-npm-cache
                    keys:
                        - npm-server-deps-{{ checksum "server/package-lock.json" }}
                        - server-composer-deps-            

            -   run:
                    name: "Install Dependencies"
                    command: make -C server install@integration

            -   save_cache: &save-composer-cache
                    key: server-composer-deps-{{ checksum "server/composer.lock" }}
                    paths:
                        - ~/.composer/cache
                        - server/vendor
                        - server/bin/.phpunit

            -   save_cache:  &save-server-npm-cache
                    key: npm-server-deps-{{ checksum "server/package-lock.json" }}
                    paths:
                        - server/node_modules/
            -   run:
                    name: "Lint (php-cs-fixer)"
                    command: make -C server lint.php-cs-fixer@integration
            -   run:
                    name: "Lint (PHPStan)"
                    command: make -C server lint.phpstan@integration

            -   run:
                    name: "Tests (Unit)"
                    command: make -C server test@integration
    e2e:
        docker:
            -   image: circleci/php:7.4-node-browsers
                environment: *server-env
            -   image: circleci/postgres:12.1-alpine
                environment: *postgresql-env
        steps:
            - checkout
            -   run: *server-dependencies

            -   run:
                    name: install symfony cli
                    command: 'wget https://get.symfony.com/cli/installer -O - | bash'

            -   run:
                    name: Download Selenium
                    command: curl -O http://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar

            -   restore_cache: *restore-npm-cache
            -   restore_cache: *restore-composer-cache
            -   restore_cache: *restore-server-npm-cache

            -   run:
                    name: "Install Dependencies"
                    command: |
                        make -C client install
                        make -C server install@integration

            -   save_cache: *save-npm-cache
            -   save_cache: *save-composer-cache
            -   save_cache: *save-server-npm-cache

            -   run:
                    environment:
                        API_URL: "http://localhost:8000/api"
                    name: build client app
                    command: cd client && npm run build

            -   run:
                    environment:
                        API_URL: "http://localhost:8000/api"
                    name: start client server
                    command: cd client && node __sapper__/build
                    background: true

            -   run:
                    name: start server api
                    command: cd server && APP_ENV=e2e /home/circleci/.symfony/bin/symfony server:start --allow-http
                    background: true

            -   run:
                    name: Start Selenium
                    command: java -jar selenium-server-standalone-3.141.59.jar
                    background: true

            -   run:
                    name: run behat tests
                    command: |
                        sleep 10
                        cd server && APP_ENV=e2e vendor/bin/behat
workflows:
    integration:
        jobs:
            - client
            - server
            - e2e:
                    requires:
                        - client
                        - server
