# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: 'parameters.yaml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Proximum\Vimeet365\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/Entity/'
            - '../src/Application/Views/'
            - '../src/Vimeet/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Proximum\Vimeet365\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    query_handlers:
        namespace: Proximum\Vimeet365\Application\Query\
        resource: '../src/Application/Query/**/*QueryHandler.php'
        public: true
        tags:
            - { name: 'messenger.message_handler', bus: 'messenger.bus.queries' }

    command_handlers:
        namespace: Proximum\Vimeet365\Application\Command\
        resource: '../src/Application/Command/**/*CommandHandler.php'
        public: true
        tags:
            - { name: 'messenger.message_handler', bus: 'messenger.bus.commands' }

    query_bus:
        class: Proximum\Vimeet365\Infrastructure\Adapter\BusAdapter
        arguments: ['@messenger.bus.queries']

    command_bus:
        class: Proximum\Vimeet365\Infrastructure\Adapter\BusAdapter
        arguments: ['@messenger.bus.commands']

    Proximum\Vimeet365\Application\Adapter\CommandBusInterface: '@command_bus'
    Proximum\Vimeet365\Application\Adapter\QueryBusInterface: '@query_bus'

    Proximum\Vimeet365\Infrastructure\Bridge\ApiPlatform\AcceptLanguageEventListener:
        bind:
            $supportedLanguages: '%supported_languages%'

    Proximum\Vimeet365\Infrastructure\DataProvider\LanguageDataProvider:
        bind:
            $languages: '%supported_spoken_languages%'

    Proximum\Vimeet365\Infrastructure\Bridge\Vimeet\Nomenclature\Exporter:
        bind:
            $defaultLanguages: '%supported_languages%'

    Proximum\Vimeet365\Infrastructure\Nomenclature\Exporter:
        bind:
            $defaultLanguages: '%supported_languages%'

    Proximum\Vimeet365\Infrastructure\Bridge\OpenApi\LoginDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    Proximum\Vimeet365\Infrastructure\Bridge\OpenApi\NomenclatureDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    Proximum\Vimeet365\Infrastructure\Bridge\OpenApi\CurrentAccountDecorator:
        decorates: 'api_platform.openapi.factory'
        autoconfigure: false

    redis_session:
        class: \Predis\Client
        arguments:
            $parameters: { host: '%env(resolve:VIMEET365_REDIS_HOST)%', port: '%env(int:VIMEET365_REDIS_PORT)%', database: 1}

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@redis_session'
